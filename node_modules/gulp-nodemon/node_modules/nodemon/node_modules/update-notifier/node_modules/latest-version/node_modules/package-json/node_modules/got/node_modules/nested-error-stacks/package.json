{
  "name": "nested-error-stacks",
  "version": "1.0.0",
  "description": "An Error subclass that will chain nested Errors and dump nested stacktraces",
  "bugs": {
    "url": "https://github.com/mdlavin/nested-error-stacks/issues"
  },
  "keywords": [
    "error",
    "nested",
    "stack"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/mdlavin/nested-error-stacks.git"
  },
  "main": "index.js",
  "files": [
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "test": "mocha"
  },
  "author": {
    "name": "Matt Lavin",
    "email": "matt.lavin@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.18.2",
    "uuid": "~1.4.1",
    "chai": "~1.9.1"
  },
  "readme": "Nested stacktraces for Node.js!\n===============================\n\n[![Build Status](https://travis-ci.org/mdlavin/nested-error-stacks.svg)](https://travis-ci.org/mdlavin/nested-error-stacks)\n[![NPM version](https://badge.fury.io/js/nested-error-stacks.svg)](http://badge.fury.io/js/nested-error-stacks)\n[![Dependency Status](https://david-dm.org/mdlavin/nested-error-stacks.svg)](https://david-dm.org/mdlavin/nested-error-stacks)\n\nWith this module, you can wrap a caught exception with extra context\nfor better debugging.  For example, a network error's stack would normally look\nlike this:\n\n    Error: connect ECONNREFUSED\n        at errnoException (net.js:904:11)\n        at Object.afterConnect [as oncomplete] (net.js:895:19)\n\nUsing this module, you can wrap the Error with more context to get a stack\nthat looks like this:\n\n    NestedError: Failed to communicate with localhost:8080\n        at Socket.<anonymous> (/Users/mattlavin/Projects/nested-stacks/demo.js:6:18)\n        at Socket.EventEmitter.emit (events.js:95:17)\n        at net.js:440:14\n        at process._tickCallback (node.js:415:13)\n    Caused By: Error: connect ECONNREFUSED\n        at errnoException (net.js:904:11)\n        at Object.afterConnect [as oncomplete] (net.js:895:19)\n\nHow to wrap errors\n==================\n\nHere is an example program that uses this module to add more context to errors:\n\n```javascript\n    var NestedError = require('nested-error-stacks');\n    var net = require('net');\n    \n    var client = net.connect({port: 8080});\n    client.on('error', function (err) {\n    var newErr = new NestedError(\"Failed to communicate with localhost:8080\", err);\n        console.log(newErr.stack);\n    });\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mdlavin/nested-error-stacks",
  "_id": "nested-error-stacks@1.0.0",
  "_shasum": "3bd2785bb1fa9ebbf608e293e9ccb9ea765254c7",
  "_from": "https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-1.0.0.tgz",
  "_resolved": "https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-1.0.0.tgz"
}
