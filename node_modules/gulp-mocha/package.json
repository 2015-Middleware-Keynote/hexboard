{
  "name": "gulp-mocha",
  "version": "2.1.1",
  "description": "Run Mocha tests",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/sindresorhus/gulp-mocha"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "mocha",
    "test",
    "testing",
    "unit",
    "framework",
    "runner",
    "tdd",
    "bdd",
    "qunit",
    "spec",
    "tap"
  ],
  "dependencies": {
    "gulp-util": "^3.0.0",
    "mocha": "^2.0.1",
    "through": "^2.3.4"
  },
  "readme": "# gulp-mocha [![Build Status](https://travis-ci.org/sindresorhus/gulp-mocha.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-mocha)\n\n> Run [Mocha](https://github.com/mochajs/mocha/) tests\n\n*Keep in mind that this is just a thin wrapper around Mocha and your issue is most likely with Mocha.*\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-mocha\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar mocha = require('gulp-mocha');\n\ngulp.task('default', function () {\n\treturn gulp.src('test.js', {read: false})\n\t\t// gulp-mocha needs filepaths so you can't have any plugins before it\n\t\t.pipe(mocha({reporter: 'nyan'}));\n});\n```\n\n\n## API\n\n### mocha([options])\n\n#### options\n\n##### ui\n\nType: `string`  \nDefault: `bdd`  \nValues: `bdd`, `tdd`, `qunit`, `exports`\n\nThe interface to use.\n\n##### reporter\n\nType: `string`  \nDefault: `spec` | `dot` prior to mocha v1.21.0  \nValues: [reporters](https://github.com/mochajs/mocha/tree/master/lib/reporters)\n\nThe reporter that will be used.\n\nThis option can also be used to utilize third-party reporters. For example if you `npm install mocha-lcov-reporter` you can then do use `mocha-lcov-reporter` as value.\n\n##### globals\n\nType: `array`\n\nList of accepted global variable names, example `['YUI']`. Accepts wildcards to match multiple global variables, e.g. `['gulp*']` or even `['*']`. See [Mocha globals option](http://mochajs.org/#globals-option).\n\n##### timeout\n\nType: `number`  \nDefault: `2000`\n\nTest-case timeout in milliseconds.\n\n##### bail\n\nType: `boolean`  \nDefault: `false`\n\nBail on the first test failure.\n\n##### ignoreLeaks\n\nType: `boolean`  \nDefault: `false`\n\nIgnore global leaks.\n\n##### grep\n\nType: `string`\n\nOnly run tests matching the given pattern which is internally compiled to a RegExp.\n\n##### require\n\nType: `array`\n\nRequire custom modules before tests are run.\n\n\n## FAQ\n\n### Test suite not exiting\n\nIf your test suite is not exiting it might be because you still have a lingering callback, most often caused by an open database connection. You should close this connection or do the following:\n\n```js\ngulp.task('default', function () {\n\treturn gulp.src('test.js')\n\t\t.pipe(mocha())\n\t\t.once('error', function () {\n\t\t\tprocess.exit(1);\n\t\t})\n\t\t.once('end', function () {\n\t\t\tprocess.exit();\n\t\t});\n});\n```\n\n### CoffeeScript\n\nAdd `require('coffee-script/register')` to the top of your `gulpfile.js`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-mocha/issues"
  },
  "homepage": "https://github.com/sindresorhus/gulp-mocha",
  "_id": "gulp-mocha@2.1.1",
  "_shasum": "a6f8d6f609d2eff33ae73c9a5d88b5ae9f0d5e66",
  "_from": "https://registry.npmjs.org/gulp-mocha/-/gulp-mocha-2.1.1.tgz",
  "_resolved": "https://registry.npmjs.org/gulp-mocha/-/gulp-mocha-2.1.1.tgz"
}
